[{"path":"https://ropengov.github.io/fmi2/articles/weather_observation_data.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"fmi2: introduction","text":"fmi2 yet CRAN, ’ll need install directly GitHub. ’re , make sure also install packages ’ll using tutorial.","code":"install.packages(c(\"DT\", \"ggplot2\", \"leaflet\", \"remotes\", \"sf\", \"tidyverse\"))  remotes::install_github(\"ropengov/fmi2\") remotes::install_github(\"ropensci/skimr\") library(DT) library(fmi2) library(ggplot2) library(knitr) library(leaflet) library(sf) library(skimr)"},{"path":"https://ropengov.github.io/fmi2/articles/weather_observation_data.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"fmi2: introduction","text":"can retrieve weather stating observation data various temporal resolution using fmi2. First thing need know course location exactly want get data . FMI API provides multiple different ways defining spatial query area: Bounding box given coordindates defining area Place name provide data. FMISID numeric FMI observation station identifier GEOID numeric geoid location WMO code location ’ll start using FMISID identifies given FMI observation stations. online table also available fmi2 using function fmi_stations(): ’re going pick “Hanko Tulliniemi” example use FMISID (100946) retrieve data. can see table , also provides latlon (geographical) coordinates observation station. get actual data, let’s visualize Hanko region.","code":"station_data <- fmi2::fmi_stations()   station_data %>%    DT::datatable() # Get data for Tulliniemi only tulliniemi_station <- station_data %>%    dplyr::filter(fmisid == 100946)  # Plot on a map using leaflet leaflet::leaflet(station_data) %>%    leaflet::setView(lng = tulliniemi_station$lon,                     lat = tulliniemi_station$lat,                     zoom = 11) %>%    leaflet::addTiles() %>%     leaflet::addMarkers(~lon, ~lat, popup = ~name, label = ~as.character(fmisid))"},{"path":"https://ropengov.github.io/fmi2/articles/weather_observation_data.html","id":"getting-daily-weather-observation-data","dir":"Articles","previous_headings":"","what":"Getting daily weather observation data","title":"fmi2: introduction","text":"Now know address specific observation station, can proceed getting actual data. fmi2 providers several functions retrieving data different variables temporal resolution. ’ll start obs_weather_daily() returns daily average observation data given location. Let’s get daily weather observation data first 6 monhts 2019: total, function returned 1086 observations. can also note following: means data returned obs_weather_daily() spatial sf object geometry column storing geographical information weather station. ’ll come back later. Now interested kind data actually get? Let’s find : six variables corresponding values. fmi2 provides helper function describe_variables() can useful finding variables: obs_weather_daily() returns data called long (melted) format meaning variable (.e. parameter) names contained column variable corresponding values value column. can transform data wide format using tidyr: Looks like aren’t much data rrday, snow TG_PT12H_min. Let’s closer look data: Data summary Variable type: Date Variable type: numeric Seems like mentioned variables indeed don’t data defined days. Let’s get data couple observation stations around finland. Note time ’re using place name instead FMISID. Let’s plot daily temperature data different locations:","code":"# Use Hanko Tulliniemi weather station FMISID tulliniemi_data <- obs_weather_daily(starttime = \"2019-01-01\",                                      endtime = \"2019-06-30\",                                      fmisid = 100946) class(tulliniemi_data) #> [1] \"sf\"         \"data.frame\" unique(tulliniemi_data$variable) #> [1] \"rrday\"        \"tday\"         \"snow\"         \"tmin\"         \"tmax\"         #> [6] \"TG_PT12H_min\" var_descriptions <- fmi2::describe_variables(tulliniemi_data$variable) var_descriptions %>%    DT::datatable() wide_data <- tulliniemi_data %>%    tidyr::spread(variable, value) %>%    # Let's convert the sf object into a regular tibble   sf::st_set_geometry(NULL)  wide_data %>%    DT::datatable() (skimr::skim(wide_data)) oulu_data <- obs_weather_daily(starttime = \"2019-01-01\",                                endtime = \"2019-06-30\",                                place = \"Oulu\") nuorgam_data <- obs_weather_daily(starttime = \"2019-01-01\",                                   endtime = \"2019-06-30\",                                   place = \"Nuorgam\") # Add location name to each data set and combine them oulu_data$location <- \"Oulu\" nuorgam_data$location <- \"Nuorgam\" tulliniemi_data$location <- \"Hanko\"  all_data <- rbind(tulliniemi_data, oulu_data, nuorgam_data) # Factorize location and make order explicit all_data <- all_data %>%    dplyr::mutate(location = factor(location,                                    levels = c(\"Nuorgam\", \"Oulu\", \"Hanko\"),                                   ordered = TRUE)) all_data %>%    dplyr::filter(variable == \"tday\" | variable == \"tmax\" | variable == \"tmin\") %>%    ggplot(aes(x = time, y = value, color = variable)) +    geom_line() + facet_wrap(~ location, ncol=1) + ylab(\"Temperature (C)\\n\") +   xlab(\"\\nDate\") + theme_minimal()"},{"path":"https://ropengov.github.io/fmi2/articles/weather_observation_data.html","id":"getting-hourly-weather-observation-data","dir":"Articles","previous_headings":"","what":"Getting hourly weather observation data","title":"fmi2: introduction","text":"Instead daily values, also possible retrieve weather observation data finer temporal resolution, hourly data, using function obs_weather_hourly(). data retrieved slightly different content compared daily data: , let’s first look actually got:","code":"# Get the hourly observations for the first day of 2019 in Hanko Tulliniemi tulliniemi_data <- fmi2::obs_weather_hourly(starttime = \"2019-02-01\",                                             endtime = \"2019-02-02\",                                             fmisid = 100946) var_descriptions <- fmi2::describe_variables(tulliniemi_data$variable) var_descriptions %>%    DT::datatable()"},{"path":"https://ropengov.github.io/fmi2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joona Lehtomaki. Author, maintainer. Leo Lahti. Author. Ilari Scheinin. Contributor.","code":""},{"path":"https://ropengov.github.io/fmi2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lehtomaki J, Lahti L (2023). fmi2: Finnish Meteorological Institute open data API R client. https://ropengov.github.io/fmi2/, https://github.com/rOpenGov/fmi2.","code":"@Manual{,   title = {fmi2: Finnish Meteorological Institute open data API R client},   author = {Joona Lehtomaki and Leo Lahti},   year = {2023},   note = {https://ropengov.github.io/fmi2/, https://github.com/rOpenGov/fmi2}, }"},{"path":"https://ropengov.github.io/fmi2/index.html","id":"fmi2---r-client-for-the-finnish-meteorological-institutes-fmi-api-","dir":"","previous_headings":"","what":"Finnish Meteorological Institute open data API R client","title":"Finnish Meteorological Institute open data API R client","text":"R client package Finnish Meteorological Institute (FMI) open data API. fmi2 provides access subset FMI download service. FMI maintains reponsible data available API, official connections fmi2. data FMI released Creative Commons Attribution 4.0 International license.","code":""},{"path":"https://ropengov.github.io/fmi2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Finnish Meteorological Institute open data API R client","text":"fmi2 yet CRAN, can install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"rOpenGov/fmi2\")"},{"path":"https://ropengov.github.io/fmi2/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Finnish Meteorological Institute open data API R client","text":"Currently, following FMI stored queries avaible fmi2: data sets queries may wrapped future.","code":""},{"path":"https://ropengov.github.io/fmi2/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Finnish Meteorological Institute open data API R client","text":"usage examples, see package function reference following vignettes: Getting weather observation data","code":""},{"path":"https://ropengov.github.io/fmi2/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Finnish Meteorological Institute open data API R client","text":"particular need mind, ’re free : Fork repository, modify code leave pull request. Leave issue description improvements.","code":""},{"path":"https://ropengov.github.io/fmi2/index.html","id":"why-fmi2","dir":"","previous_headings":"","what":"Why fmi2?","title":"Finnish Meteorological Institute open data API R client","text":"fmi2, ’s first fmi!? Good question, fmi can found longer developed maintained. fmi developed back day accessing data WFS R much difficult. Hence, package much complicated fmi2 laborious maintain.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe FMI Variables — describe_variables","title":"Describe FMI Variables — describe_variables","text":"Describe FMI observation variable(s).","code":""},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe FMI Variables — describe_variables","text":"","code":"describe_variables(x)"},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe FMI Variables — describe_variables","text":"x character vector observation variables described.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe FMI Variables — describe_variables","text":"tibble containing following columns: variable Observation variable name label Variable (parameter) label used FMI base_phenomenon Base phenomenon variable characterising unit Variabel unit stat_function Statistical function used derive variable value agg_period Aggregation time period","code":""},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe FMI Variables — describe_variables","text":"FMI provides machine-reabable (XML) description different observation variables. Use function see specifications given variable.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Describe FMI Variables — describe_variables","text":"Joona Lehtomäki joona.lehtomaki@iki.fi","code":""},{"path":"https://ropengov.github.io/fmi2/reference/describe_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe FMI Variables — describe_variables","text":"","code":"if (FALSE) {      desc <- describe_variables(c(\"TG_PT12H_min\", \"rrday\"))   }"},{"path":"https://ropengov.github.io/fmi2/reference/fmi2-variables.html","id":null,"dir":"Reference","previous_headings":"","what":"fmi2 global variables — fmi2-variables","title":"fmi2 global variables — fmi2-variables","text":"fmi2 global variables","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":null,"dir":"Reference","previous_headings":"","what":"FMI API — fmi_api","title":"FMI API — fmi_api","text":"Requests FMI API.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FMI API — fmi_api","text":"","code":"fmi_api(request, storedquery_id = NULL, ...)"},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FMI API — fmi_api","text":"request character request type either DescribeStoredQueries getFeature. storedquery_id character id stored query id. request getFeature, storedquery_id must provided otherwise ignored. ... stored query specific parameters. NOTE: high-level functions check validity parameters.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FMI API — fmi_api","text":"fmi_api (S3) object following attributes: content XML payload. path path provided get resonse. response original response object.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FMI API — fmi_api","text":"Make request FMI API. base url opendata.fmi.fi/wfs?service=WFS&version=2.0.0 components defined arguments appended. low-level function intended used higher level functions package. Note GET requests used using httpcache meaning requests cached. want clear cache, use httpcache::clearCache(). turn cache completely, use httpcache::cacheOff()","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FMI API — fmi_api","text":"Joona Lehtomäki joona.lehtomaki@iki.fi","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FMI API — fmi_api","text":"","code":"# List stored queries   fmi_api(request = \"DescribeStoredQueries\") #> $url #> [1] \"http://opendata.fmi.fi/wfs?service=WFS&version=2.0.0&request=DescribeStoredQueries\" #>  #> $response #> Response [http://opendata.fmi.fi/wfs?service=WFS&version=2.0.0&request=DescribeStoredQueries] #>   Date: 2023-07-13 13:33 #>   Status: 200 #>   Content-Type: text/xml; charset=UTF-8 #>   Size: 479 kB #> <?xml version=\"1.0\" encoding=\"UTF-8\"?> #> <DescribeStoredQueriesResponse xmlns=\"http://www.opengis.net/wfs/2.0\" #>   xmlns:omso=\"http://inspire.ec.europa.eu/schemas/omso/3.0\" #>   xmlns:xlink=\"http://www.w3.org/1999/xlink\" #>   xmlns:ows_common=\"http://www.opengis.net/ows/1.1\" #>   xmlns:inspire_common=\"http://inspire.ec.europa.eu/schemas/common/1.0\" #>   xmlns:gml=\"http://www.opengis.net/gml/3.2\" #>   xmlns:fe=\"http://www.opengis.net/fes/2.0\" #>   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" #>   xsi:schemaLocation=\"http://www.opengis.net/wfs/2.0 http://schemas.opengis.n... #> ... #>  #> $content #> {xml_nodeset (165)} #>  [1] <StoredQueryDescription id=\"ecmwf::forecast::pressure::grid\">\\n  <Title> ... #>  [2] <StoredQueryDescription id=\"ecmwf::forecast::surface::cities::multipoint ... #>  [3] <StoredQueryDescription id=\"ecmwf::forecast::surface::cities::simple\">\\n ... #>  [4] <StoredQueryDescription id=\"ecmwf::forecast::surface::cities::timevaluep ... #>  [5] <StoredQueryDescription id=\"ecmwf::forecast::surface::finland::grid\">\\n  ... #>  [6] <StoredQueryDescription id=\"ecmwf::forecast::surface::grid\">\\n  <Title>E ... #>  [7] <StoredQueryDescription id=\"ecmwf::forecast::surface::obsstations::multi ... #>  [8] <StoredQueryDescription id=\"ecmwf::forecast::surface::obsstations::simpl ... #>  [9] <StoredQueryDescription id=\"ecmwf::forecast::surface::obsstations::timev ... #> [10] <StoredQueryDescription id=\"ecmwf::forecast::surface::point::multipointc ... #> [11] <StoredQueryDescription id=\"ecmwf::forecast::surface::point::simple\">\\n  ... #> [12] <StoredQueryDescription id=\"ecmwf::forecast::surface::point::timevaluepa ... #> [13] <StoredQueryDescription id=\"fmi::avi::observations::finland::iwxxm\">\\n   ... #> [14] <StoredQueryDescription id=\"fmi::avi::observations::finland::latest::iwx ... #> [15] <StoredQueryDescription id=\"fmi::avi::observations::iwxxm\">\\n  <Title>Av ... #> [16] <StoredQueryDescription id=\"fmi::avi::observations::latest::iwxxm\">\\n  < ... #> [17] <StoredQueryDescription id=\"fmi::ef::networks\">\\n  <Title>Environmental  ... #> [18] <StoredQueryDescription id=\"fmi::ef::stations\">\\n  <Title>Environmental  ... #> [19] <StoredQueryDescription id=\"fmi::forecast::climatology::scenario::grid\"> ... #> [20] <StoredQueryDescription id=\"fmi::forecast::edited::weather::scandinavia: ... #> ... #>  #> attr(,\"class\") #> [1] \"fmi_api\""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of active FMI observation stations. — fmi_stations","title":"Get a table of active FMI observation stations. — fmi_stations","text":"Data retrieved using FMI API stored query.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/fmi_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of active FMI observation stations. — fmi_stations","text":"","code":"fmi_stations()"},{"path":"https://ropengov.github.io/fmi2/reference/fmi_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of active FMI observation stations. — fmi_stations","text":"tibble active observation stations","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/fmi_stations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a table of active FMI observation stations. — fmi_stations","text":"Joona Lehtomaki joona.lehtomaki@gmail.com","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"List and describe all valid parameters for a given stored query. — list_parameters","title":"List and describe all valid parameters for a given stored query. — list_parameters","text":"valid stored query IDs, see list_queries.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List and describe all valid parameters for a given stored query. — list_parameters","text":"","code":"list_parameters(query_id)"},{"path":"https://ropengov.github.io/fmi2/reference/list_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List and describe all valid parameters for a given stored query. — list_parameters","text":"query_id character string query ID.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List and describe all valid parameters for a given stored query. — list_parameters","text":"tibble describing valid parameters.","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/list_parameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List and describe all valid parameters for a given stored query. — list_parameters","text":"Joona Lehtomäki joona.lehtomaki@iki.fi","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List and describe all valid parameters for a given stored query. — list_parameters","text":"","code":"if (FALSE) {     list_parameters(\"fmi::observations::weather::daily::timevaluepair\")   }"},{"path":"https://ropengov.github.io/fmi2/reference/list_queries.html","id":null,"dir":"Reference","previous_headings":"","what":"List stored queries available over the FMI API. — list_queries","title":"List stored queries available over the FMI API. — list_queries","text":"Stored queries identifiers data sets. current version Open Data WFS service Finnish Meteorological Institute uses stored queries extensively enable users select features, areas times require easily possible. See Open data WFS Service detailed information available stored queries request parameters.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_queries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List stored queries available over the FMI API. — list_queries","text":"","code":"list_queries(all = FALSE)"},{"path":"https://ropengov.github.io/fmi2/reference/list_queries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List stored queries available over the FMI API. — list_queries","text":"logical stored queries available API listed(default: FALSE)?","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_queries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List stored queries available over the FMI API. — list_queries","text":"tibble containing following columns: query_id ID storied query. query_desc Description storied query. no_parameters Number parameters. function_name Name function fmi2 wrapped, NA otherwise.","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/list_queries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List stored queries available over the FMI API. — list_queries","text":"Joona Lehtomäki joona.lehtomaki@iki.fi","code":""},{"path":"https://ropengov.github.io/fmi2/reference/list_queries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List stored queries available over the FMI API. — list_queries","text":"","code":"if (FALSE) {   # List the stored queres that have been wrapped (i.e. are accessible) by   # the fmi2 package   list_queries()   # List all stored queries available through the API   list_queries(all = TRUE) }"},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Weather observations — obs_weather_daily","title":"Weather observations — obs_weather_daily","text":"Daily weather observations weather stations.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weather observations — obs_weather_daily","text":"","code":"obs_weather_daily(starttime, endtime, fmisid = NULL, place = NULL)"},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weather observations — obs_weather_daily","text":"starttime character Date start time interval ISO-format. character coerced Date object. endtime character Date end time interval ISO-format. character coerced Date object. data. fmisid numeric FMI observation station identifier (see fmi_stations. place character location name provide data.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weather observations — obs_weather_daily","text":"sf object long (melted) form. Observation variables names given variable column. Following variables returned: rrday Precipitation amount snow Snow depth tday Average air temperature tmin Minimum air temperature tmax Maximum air temperature TG_PT12H_min Ground minimum temperature","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_daily.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weather observations — obs_weather_daily","text":"Default set contains daily precipitation rate, mean temperature, snow depth, minimum maximum temperature. default, data returned last 744 hours. least one location parameter (geoid/place/fmisid/wmo/bbox) given. FMI WFS stored query used function fmi::observations::weather::daily::simple. informations, see FMI documentation page.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_daily.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Weather observations — obs_weather_daily","text":"complete description accepted arguments, see list_parameters(\"fmi::observations::weather::daily::simple\").","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_hourly.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly weather observations from weather stations. — obs_weather_hourly","title":"Hourly weather observations from weather stations. — obs_weather_hourly","text":"Default set contains hourly air temperature average, maximum minimum, air relative humidity average, wind speed average, minumum (10 minute average) maximum (10 minute average), wind direction average, wind gust speed maximum (3 second average), rain accumulated, rain intensity maximum, air pressure average significant weather code. default, data returned last 24 hours. least one location parameter (geoid/place/fmisid/wmo/bbox) given.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_hourly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly weather observations from weather stations. — obs_weather_hourly","text":"","code":"obs_weather_hourly(starttime, endtime, fmisid = NULL)"},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_hourly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hourly weather observations from weather stations. — obs_weather_hourly","text":"starttime character begin time interval ISO-format. endtime character end time interval ISO-format. data. fmisid numeric FMI observation station identifier (see fmi_stations.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_hourly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hourly weather observations from weather stations. — obs_weather_hourly","text":"sf object long (melted) form. Observation variables names given variable column. Following variables returned: rrday Precipitation amount snow Snow depth tday Average air temperature tmin Minimum air temperature tmax Maximum air temperature TG_PT12H_min Ground minimum temperature","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_hourly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hourly weather observations from weather stations. — obs_weather_hourly","text":"FMI WFS stored query used function fmi::observations::weather::hourly::simple. informations, see FMI documentation page.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/obs_weather_hourly.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Hourly weather observations from weather stations. — obs_weather_hourly","text":"complete description accepted arguments, see list_parameters(\"fmi::observations::weather::hourly::simple\").","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a fmi_api object into a sf object. — to_sf","title":"Transform a fmi_api object into a sf object. — to_sf","text":"FMI API response object's XML (GML) content temporarily wrtitten disk immediately read back sf object.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a fmi_api object into a sf object. — to_sf","text":"","code":"to_sf(api_obj)"},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a fmi_api object into a sf object. — to_sf","text":"api_obj fmi api object","code":""},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a fmi_api object into a sf object. — to_sf","text":"sf object","code":""},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Transform a fmi_api object into a sf object. — to_sf","text":"internal use, exported.","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform a fmi_api object into a sf object. — to_sf","text":"Joona Lehtomäki joona.lehtomaki@iki.fi","code":""},{"path":"https://ropengov.github.io/fmi2/reference/to_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a fmi_api object into a sf object. — to_sf","text":"","code":"if (FALSE) {     response <- fmi_api(request = \"getFeature\",                         storedquery_id = \"fmi::observations::weather::daily::timevaluepair\",                         starttime = \"2019-01-01\", endtime = \"2019-01-04\",                         fmisid = 100946)     sf_obj <- to_sf(response)   }"},{"path":"https://ropengov.github.io/fmi2/reference/valid_fmisid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a provided ID number is a valid FMI SID. — valid_fmisid","title":"Check if a provided ID number is a valid FMI SID. — valid_fmisid","text":"fmisid ID numbering system used FMI.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/valid_fmisid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a provided ID number is a valid FMI SID. — valid_fmisid","text":"","code":"valid_fmisid(fmisid)"},{"path":"https://ropengov.github.io/fmi2/reference/valid_fmisid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a provided ID number is a valid FMI SID. — valid_fmisid","text":"fmisid numeric character ID number.","code":""},{"path":"https://ropengov.github.io/fmi2/reference/valid_fmisid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a provided ID number is a valid FMI SID. — valid_fmisid","text":"logical","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/reference/valid_fmisid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a provided ID number is a valid FMI SID. — valid_fmisid","text":"Joona Lehtomaki joona.lehtomaki@gmail.com","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/news/index.html","id":"changes-in-version-development-version","dir":"Changelog","previous_headings":"","what":"CHANGES IN VERSION 0.2.0 (2020-11-29)","title":"fmi2 (development version)","text":"Use FMI API retrieve FMI stations data. Previously information retrieved scraping HTML table FMI webiste.","code":""},{"path":"https://ropengov.github.io/fmi2/news/index.html","id":"changes-in-version-xx-xx-development-version","dir":"Changelog","previous_headings":"","what":"CHANGES IN VERSION 0.1.1 (2019-XX-XX)","title":"fmi2 (development version)","text":"Remove local weather stations table (CSV). means FMI weather stations downloaded FMI website per session. Table longer available offline, data well. Man pages revised","code":""},{"path":[]},{"path":"https://ropengov.github.io/fmi2/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"CHANGES IN VERSION 0.1.1 (2019-XX-XX)","what":"Bug fixes","title":"fmi2 (development version)","text":"Remove partial URL definition docs, CRAN error .","code":""},{"path":"https://ropengov.github.io/fmi2/news/index.html","id":"development-related-development-version","dir":"Changelog","previous_headings":"CHANGES IN VERSION 0.1.1 (2019-XX-XX)","what":"Development related","title":"fmi2 (development version)","text":"Test coverage increased 100%. Internally, fmi2_global$function_map now tibble instead list. Stored query / function -mapping README generated automatically list_queries(). function now lives file name function (see #7)","code":""},{"path":"https://ropengov.github.io/fmi2/news/index.html","id":"changes-in-version-development-version-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN VERSION 0.1.0 (2019-09-09)","title":"fmi2 (development version)","text":"fmi2 !","code":""}]
